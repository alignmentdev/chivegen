#!/bin/bash

# This is just a simple shell script to run ChiveGenMain (chivegen)
# with the given set of arguments.

if [ $# -lt 4 ]; then
	# If we don't have enough arguments to run, just give usage and quit.
	echo "USAGE: $0 -i INPUT_DIR -o OUTPUT_DIR [additional options]"
	echo "Try '$0 --help' for more information."
else
	# Go through our arguments and convert input and output directories to
	# absolute paths.
	declare -a FABargs
	out_next=0
	in_next=0
	tm_next=0
	input_dir=""
	output_dir=""
	has_in=0
	has_out=0
	for i in "$@"; do
		# echo "CURRENT ARG: $i"
		if [ $out_next -eq 1 ]; then
			output_dir="$(realpath "$i")"
			# If the output directory doesn't exist, try creating it
			if [ -z "$output_dir" ]; then
			  echo "Creating $i ..."
			  mkdir -p "$i"
			  output_dir="$(realpath "$i")"
			fi;
		  has_out=1
			out_next=0
		elif [ $in_next -eq 1 ]; then
			input_dir="$(realpath "$i")"
			has_in=0
			in_next=0
		elif [ $tm_next -eq 1 ]; then
		  # correct for template URL path
		  FABargs+=("-t")
			FABargs+=("$(realpath "$i")")
			tm_next=0
		else		
			if [[ $i == "-i" || $i == "--input" ]]; then
				in_next=1
			elif [[ $i == "-o" || $i == "--output" ]]; then
				out_next=1
			elif [[ $i == "-t" || $i == "--template" ]]; then
				tm_next=1
			else
				FABargs+=($i)
			fi;
		fi;
	done
	# Check if we have met the minimum requirements to run
	# If not, again, stop before calling on ChiveGenMain
	if [[ $has_in == 0 || $has_out == 0 ]]; then
		echo "USAGE: $0 -i INPUT_DIR -o OUTPUT_DIR [additional options]"
		echo "Try '$0 --help' for more information."
	else
		# Go into the binaries folder, run ChiveGenMain with java, then go
		# back up to the main folder.
		cd "./bin"
		# echo "FINAL ARGS: ${FABargs[@]} (${#FABargs[@]} args)"
		echo "Running ChiveGenMain..."
		echo ""
		# echo "java ChiveGenMain" "-i \"$input_dir\" -o \"$output_dir\" ${FABargs[@]}"
		# Note that all our arguments must be in separate quotes, or else they will
		# be treated like one giant lump string.
		java "ChiveGenMain" "-i" "$input_dir" "-o" "$output_dir" "${FABargs[@]}"
		cd ".."
	fi;
fi;
